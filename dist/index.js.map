{"version":3,"file":"index.js","sourceRoot":"","sources":["../index.ts"],"names":[],"mappings":";;AAAA,kDAA2D;AAI3D,MAAM,WAAW;IAEb,YAAY,MAAc;QAa1B,yBAAoB,GAAG,CAAC,OAAe,EAAE,MAAc,EAAE,IAAS,EAAE,EAAE;YAClE,IAAI,OAAO,IAAI,UAAU,EAAE;gBACvB,OAAO,gCAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;aAC7C;YACD,IAAI,OAAO,IAAI,WAAW,EAAE;aAE3B;YACD,IAAI,OAAO,IAAI,OAAO,EAAE;aAEvB;YACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAA;QAC1D,CAAC,CAAA;QAED,cAAS,GAAG,CAAC,MAAe,EAAE,EAAE;YAC5B,MAAM,GAAG,GAAQ;gBACb,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,OAAO,EAAE,MAAM,CAAC,OAAO;aAC1B,CAAA;YAED,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACvB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC;oBAAE,SAAS;;oBAC3C,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;aAChE;QAEL,CAAC,CAAA;QAtCG,IAAI,CAAC,MAAM,GAAG;YACV,SAAS,EAAE;gBACP,MAAM,EAAE,EAAE;aACb;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE,EAAE;aACb;SACJ,CAAA;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC;YAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;;YACrF,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAA;IACzE,CAAC;CA6BJ;AAED,kBAAe,WAAW,CAAA","sourcesContent":["import { sendEmailWithSendgrid } from './sendgrid/sendgrid'\nimport { MailDTO } from './sendgrid/mail.dto'\n\n\nclass MailService {\n    config;\n    constructor(config: object) {\n        this.config = {\n            mailchimp: {\n                apiKey: ''\n            },\n            sendgrid: {\n                apiKey: ''\n            }\n        }\n        if (Object.values(config).length > 0) this.config = Object.assign({}, this.config, config)\n        else throw new Error('Config file should be an object with services')\n    }\n\n    sendEmailWithService = (service: string, apiKey: string, data: any) => {\n        if (service == 'sendgrid') {\n            return sendEmailWithSendgrid(apiKey, data)\n        }\n        if (service == 'mailchimp') {\n\n        }\n        if (service == 'gmail') {\n            \n        }\n        throw new Error('Mail service currenly not supported')\n    }\n\n    sendEmail = (inputs: MailDTO) => {\n        const msg: any = {\n            from: inputs.from,\n            to: inputs.to,\n            subject: inputs.subject,\n            content: inputs.content\n        }\n\n        for (let i in this.config) {\n            if (this.config[i].apiKey.length == 0) continue;\n            else this.sendEmailWithService(i, this.config[i].apiKey, msg)\n        }\n\n    }\n}\n\nexport default MailService\n\n"]}